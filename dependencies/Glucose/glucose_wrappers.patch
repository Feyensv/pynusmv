diff -Naur glucose-syrup-4.1/simp/Solver_C.C glucose/simp/Solver_C.C
--- glucose-syrup-4.1/simp/Solver_C.C	1970-01-01 01:00:00.000000000 +0100
+++ glucose/simp/Solver_C.C	2017-12-12 12:13:27.440000000 +0100
@@ -0,0 +1,71 @@
+/*
+ *
+ * Wrapper for simp/Solver.cc
+ *
+ */
+
+#include "SimpSolver.h"
+extern "C" {
+    #include "../core/Solver_C.h"
+}
+
+extern "C" Glucose_ptr Glucose_Create()
+{
+    return (Glucose_ptr) new SimpSolver();
+}
+
+extern "C" void Glucose_Delete(Glucose_ptr ms){
+    delete (SimpSolver *) ms;
+}
+
+extern "C" int Glucose_Solve(Glucose_ptr ms)
+{
+    bool ret = ((SimpSolver *)ms)->solve(true);
+    if(ret){
+        return 1;
+    }
+    return 0;
+}
+
+extern "C" int Glucose_addClause(Glucose_ptr ms, int *clause_lits, int nof_lits)
+{
+    int i;
+    vec<Lit> clauses;
+    for(i=0; i < nof_lits; i++){
+        const int lit = clause_lits[i];
+        //2 asserts ?
+        int var = abs(lit);
+        clauses.push((lit>0) ? Lit(var) : ~Lit(var));
+    }
+    ((SimpSolver *)ms) -> addClause(clauses);
+    if(((SimpSolver *)ms)->okay()){
+        //okay function? where is it defined?
+        return 1;
+    }
+    return 0;
+}
+
+extern "C" int Glucose_Solve_Assuming(Glucose_ptr ms,
+                                      int nof_assumed_lits,
+                                      int *assumed_lits)
+{
+    //simplify the solver?
+    //limited solve -> use?
+    int i;
+    vec<Lit> clauses;
+    for(i=0; i < nof_assumed_lits; i++){
+        const int lit = assumed_lits[i];
+        //2 asserts ?
+        int var = abs(lit);
+        clauses.push((lit>0) ? Lit(var) : ~Lit(var));
+    }
+
+    if(((SimpSolver *)ms)->solve(clauses, true)){
+        //okay function? where is it defined?
+        return 1;
+    }
+    return 0;
+}
+
+//extern "C" Glucose_Model(Glucose_ptr ms)
+//TODO lbool dependent of glucose or universal type?
diff -Naur glucose-syrup-4.1/core/Solver_C.C glucose/core/Solver_C.C
--- glucose-syrup-4.1/core/Solver_C.C	1970-01-01 01:00:00.000000000 +0100
+++ glucose/core/Solver_C.C	2017-12-12 12:13:27.456000000 +0100
@@ -0,0 +1,71 @@
+/*
+ *
+ * Wrapper for core/Solver.cc
+ *
+ */
+
+#include "Solver.h"
+extern "C" {
+    #include "../core/Solver_C.h"
+}
+
+extern "C" Glucose_ptr Glucose_Create()
+{
+    return (Glucose_ptr) new SimpSolver();
+}
+
+extern "C" void Glucose_Delete(Glucose_ptr ms){
+    delete (Solver *) ms;
+}
+
+extern "C" int Glucose_Solve(Glucose_ptr ms)
+{
+    bool ret = ((Solver *)ms)->solve(true);
+    if(ret){
+        return 1;
+    }
+    return 0;
+}
+
+extern "C" int Glucose_addClause(Glucose_ptr ms, int *clause_lits, int nof_lits)
+{
+    int i;
+    vec<Lit> clauses;
+    for(i=0; i < nof_lits; i++){
+        const int lit = clause_lits[i];
+        //2 asserts ?
+        int var = abs(lit);
+        clauses.push((lit>0) ? Lit(var) : ~Lit(var));
+    }
+    ((Solver *)ms) -> addClause(clauses);
+    if(((Solver *)ms)->okay()){
+        //okay function? where is it defined?
+        return 1;
+    }
+    return 0;
+}
+
+extern "C" int Glucose_Solve_Assuming(Glucose_ptr ms,
+                                      int nof_assumed_lits,
+                                      int *assumed_lits)
+{
+    //simplify the solver?
+    //limited solve -> use?
+    int i;
+    vec<Lit> clauses;
+    for(i=0; i < nof_assumed_lits; i++){
+        const int lit = assumed_lits[i];
+        //2 asserts ?
+        int var = abs(lit);
+        clauses.push((lit>0) ? Lit(var) : ~Lit(var));
+    }
+
+    if(((Solver *)ms)->solve(clauses, true)){
+        //okay function? where is it defined?
+        return 1;
+    }
+    return 0;
+}
+
+//extern "C" Glucose_Model(Glucose_ptr ms)
+//TODO lbool dependent of glucose or universal type?
diff -Naur glucose-syrup-4.1/core/Solver_C.h glucose/core/Solver_C.h
--- glucose-syrup-4.1/core/Solver_C.h	1970-01-01 01:00:00.000000000 +0100
+++ glucose/core/Solver_C.h	2017-12-12 11:59:30.008000000 +0100
@@ -0,0 +1,16 @@
+/*
+ * Wrapper for Solver.h
+ */
+#ifndef PYNUSMV_SOLVER_C_H
+#define PYNUSMV_SOLVER_C_H
+
+#define Glucose_ptr void *
+
+Glucose_ptr Glucose_create();
+void Glucose_Delete(Glucose_ptr);
+int Glucose_Add_Clause(Glucose_ptr, int *clause_lits, int nof_lits);
+int Glucose_Solve(Glucose_ptr);
+int Glucose_Solve_Assuming(Glucose_ptr, int nof_assumed_lits, int *assumed_lits);
+
+//TODO if other functions needed
+#endif //PYNUSMV_SOLVER_C_H
diff -Naur glucose-syrup-4.1/Makefile glucose/Makefile
--- glucose-syrup-4.1/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ glucose/core/Makefile	2018-01-02 11:13:23.960000000 +0100
@@ -0,0 +1,29 @@
+LIBNAME = lib.a
+EXT_LIBNAME = libGlucose.a
+EXT_LIBIFC = Solver_C.h
+COREDIR = simp
+
+LN ?= ln -s
+RANLIB ?= ranlib
+RM ?= rm -f
+MAKE ?= make
+
+# ----------------------------------------------------------------------
+# this target is invoked by the builder
+lib: $(EXT_LIBNAME) $(EXT_LIBIFC)
+	@echo Done
+
+clean:
+	cd $(COREDIR) && $(MAKE) clean
+	$(RM) $(EXT_LIBNAME) $(EXT_LIBIFC)
+	$(RM) $(COREDIR)/depend.mk
+# ----------------------------------------------------------------------
+
+$(COREDIR)/$(LIBNAME):
+	cd $(COREDIR) && $(MAKE) libs && $(RANLIB) $(LIBNAME) #libs libp libr libd TODO
+
+$(EXT_LIBNAME): $(COREDIR)/$(LIBNAME)
+	$(LN) $(COREDIR)/$(LIBNAME) $(EXT_LIBNAME)
+
+$(EXT_LIBIFC):
+	$(LN) $(COREDIR)/$(EXT_LIBIFC) $(EXT_LIBIFC)
